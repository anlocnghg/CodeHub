<Page
    x:Class="TSS.Views.TestEventPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="using:TSS"
    xmlns:converter="using:LocLib.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:TSS.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:TSS.Lib.Common.Models"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <!--#region NameOfRegion-->
    <!--#endregion-->

    <Page.Resources>
        <converter:NullOrEmptyStringToVisibility x:Key="nullOrEmptyStringToVisibilityConverter" />
        <app:IsWeekendOrHolidayToColor x:Key="isWeekendOrHolidayToColorConverter" />
        <app:DateIsWeekendOrHolidayToString x:Key="dateIsWeekendOrHolidayToStringConverter" />
    </Page.Resources>

    <Grid Style="{StaticResource rootGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--#region Event Name, Start and End Date Input-->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                x:Name="eventNameTextBox"
                Grid.Column="0"
                Margin="0,0,9,0"
                Header="Event Name"
                PlaceholderText="Input Test Event Name here"
                Text="{x:Bind ViewModel.EventName, Mode=TwoWay}" />

            <DatePicker
                Grid.Column="1"
                HorizontalAlignment="Center"
                Date="{x:Bind ViewModel.StartDate, Mode=TwoWay}"
                Header="Start Date"
                Visibility="{Binding ElementName=eventNameTextBox, Path=Text, Converter={StaticResource nullOrEmptyStringToVisibilityConverter}}" />

            <DatePicker
                Grid.Column="2"
                HorizontalAlignment="Center"
                Date="{x:Bind ViewModel.EndDate, Mode=TwoWay}"
                Header="End Date"
                Visibility="{Binding ElementName=eventNameTextBox, Path=Text, Converter={StaticResource nullOrEmptyStringToVisibilityConverter}}" />

            <Button
                Grid.Column="3"
                Margin="9,0,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Click="{x:Bind ViewModel.GenerateAssignments}"
                IsEnabled="{x:Bind ViewModel.AreTestDatesValid, Mode=OneWay}"
                Visibility="{Binding ElementName=eventNameTextBox, Path=Text, Converter={StaticResource nullOrEmptyStringToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7AC;" />
                    <TextBlock Margin="12,0,0,0" Text="Generate Assignments" />
                </StackPanel>
            </Button>
        </Grid>
        <!--#endregion-->

        <!--#region Based on Start/End Date, display 'Slots'-->

        <Grid Grid.Row="1" Visibility="{Binding ElementName=eventNameTextBox, Path=Text, Converter={StaticResource nullOrEmptyStringToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Rectangle
                Grid.Row="0"
                Height="1"
                Margin="0,9,0,3" />

            <GridView
                Grid.Row="1"
                ItemsSource="{x:Bind ViewModel.TestDates, Mode=OneWay}"
                Visibility="{x:Bind ViewModel.AreTestDatesValid, Mode=OneWay, Converter={StaticResource boolToVisibilityAndBackConverter}}">

                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="models:EachTestDate">
                        <Grid Padding="6" Background="{x:Bind IsWeekendOrHoliday, Mode=OneTime, Converter={StaticResource isWeekendOrHolidayToColorConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock
                                Grid.Row="0"
                                Margin="0"
                                HorizontalAlignment="Center"
                                FontWeight="Bold"
                                Text="{x:Bind ToString(), Mode=OneWay}" />

                            <TextBlock
                                Grid.Row="1"
                                Margin="0"
                                HorizontalAlignment="Center"
                                FontWeight="Bold"
                                Foreground="{ThemeResource SystemColorHighlightTextColor}"
                                Text="{x:Bind Date, Mode=OneTime, Converter={StaticResource dateIsWeekendOrHolidayToStringConverter}, ConverterParameter=12}"
                                ToolTipService.ToolTip="{x:Bind Date, Mode=OneTime, Converter={StaticResource dateIsWeekendOrHolidayToStringConverter}}" />

                            <StackPanel
                                Grid.Row="2"
                                Margin="0"
                                Background="{x:Bind IsWeekendOrHoliday, Mode=OneTime, Converter={StaticResource isWeekendOrHolidayToColorConverter}}">
                                <CheckBox Content="1st Shift" IsChecked="{x:Bind Has1stShift, Mode=TwoWay}" />
                                <CheckBox Content="2nd Shift" IsChecked="{x:Bind Has2ndShift, Mode=TwoWay}" />
                                <CheckBox Content="3rd Shift" IsChecked="{x:Bind Has3rdShift, Mode=TwoWay}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </GridView.ItemTemplate>

                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="Margin" Value="0,6,6,0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemChromeGrayColor}" />
                    </Style>
                </GridView.ItemContainerStyle>

                <!--<GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid MaximumRowsOrColumns="5" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>-->
            </GridView>
        </Grid>

        <!--#endregion-->
    </Grid>
</Page>
